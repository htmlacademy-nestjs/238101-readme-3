// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../../../../../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Publication {
  id Int @id @default(autoincrement())

  announcement String?
  authorQuote  String?           @map("author_quote")
  content      String?
  description  String?
  type         PublicationKind
  link         String?
  name         String?
  photo        String?
  status       PublicationStatus
  tags         String[]

  authorId        String   @map("author_id")
  originalAuthorId String?  @map("original_author_id")
  originalPublicationId Int? @map("original_publication_id")
  isReposted      Boolean  @default(false) @map("is_reposted")

  createdAt DateTime @default(now()) @map("created_at")
  publishedAt     DateTime @default(now()) @map("published_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  likes    Like[]
  comments Comment[]

  @@map("publications")
}

enum PublicationKind {
  Link
  Photo
  Quote
  Text
  Video
}

enum PublicationStatus {
  Draft
  Published
}

model Like {
  id       Int    @id @default(autoincrement())
  authorId String @map("author_id")

  publicationId Int         @map("publication_id")
  publication   Publication @relation(fields: [publicationId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  createdAt DateTime @default(now()) @map("created_at")

  @@map("likes")
}

model Comment {
  id       Int     @id @default(autoincrement())
  authorId String? @map("author_id")

  text String

  publicationId Int         @map("publication_id")
  publication   Publication @relation(fields: [publicationId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("comments")
}
